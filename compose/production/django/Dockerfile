FROM node:10-stretch-slim as client-builder

WORKDIR /app
COPY ./package.json /app
RUN npm install && npm cache clean --force
COPY . /app
RUN npm run build

# Python build stage
FROM python:3.7-alpine

ENV PYTHONUNBUFFERED 1

RUN apk update \
  # psycopg2 dependencies
  && apk add --virtual build-deps gcc python3-dev musl-dev \
  && apk add postgresql-dev \
  # lxml dependencies
  && apk add libxml2-dev libxslt-dev \
  # Pillow dependencies
  && apk add jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev tcl-dev \
  # CFFI dependencies
  && apk add libffi-dev py-cffi \
  # libsass dependencies
  && apk add g++ \
  # to compilemessages
  && apk add gettext

RUN addgroup -S django \
    && adduser -S -G django django

RUN pip install --no-cache-dir numpy==1.18.1
RUN pip install --no-cache-dir pandas==1.0.1
RUN pip install --no-cache-dir django-libsass==0.7

# Requirements are installed here to ensure they will be cached.
COPY ./requirements /requirements
RUN pip install --no-cache-dir -r /requirements/production.txt \
    && rm -rf /requirements

COPY ./compose/production/django/entrypoint /entrypoint
RUN sed -i 's/\r$//g' /entrypoint
RUN chmod +x /entrypoint
RUN chown django /entrypoint

COPY ./compose/production/django/start /start
RUN sed -i 's/\r$//g' /start
RUN chmod +x /start
RUN chown django /start
COPY --from=client-builder /app /app


RUN chown -R django /app

USER django

WORKDIR /app

ENTRYPOINT ["/entrypoint"]
